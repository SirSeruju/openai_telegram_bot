"""General

Revision ID: 8c4f3ba60475
Revises:
Create Date: 2023-12-08 18:28:23.129168

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '8c4f3ba60475'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_chat_messages_id', table_name='chat_messages')
    op.drop_index(
        'ix_chat_messages_user_id', table_name='chat_messages'
    )
    op.drop_table('chat_messages')
    op.drop_index('ix_users_telegram_id', table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'users',
        sa.Column(
            'telegram_id', sa.BIGINT(),
            server_default=sa.text(
                "nextval('users_telegram_id_seq'::regclass)"
            ), autoincrement=True, nullable=False
        ),
        sa.Column(
            'username', sa.VARCHAR(),
            autoincrement=False, nullable=True
        ),
        sa.Column(
            'first_name', sa.VARCHAR(),
            autoincrement=False, nullable=True
        ),
        sa.Column(
            'last_name', sa.VARCHAR(),
            autoincrement=False, nullable=True
        ),
        sa.Column(
            'registation_date', postgresql.TIMESTAMP(),
            autoincrement=False, nullable=True
        ),
        sa.PrimaryKeyConstraint(
            'telegram_id', name='users_pkey'
        ),
        postgresql_ignore_search_path=False
    )
    op.create_index(
        'ix_users_telegram_id', 'users', ['telegram_id'], unique=False
    )
    op.create_table(
        'chat_messages',
        sa.Column(
            'id', sa.INTEGER(),
            autoincrement=True, nullable=False
        ),
        sa.Column(
            'user_id', sa.BIGINT(),
            autoincrement=False, nullable=True
        ),
        sa.Column(
            'user_message', sa.VARCHAR(),
            autoincrement=False, nullable=True
        ),
        sa.Column(
            'user_message_datetime', postgresql.TIMESTAMP(),
            autoincrement=False, nullable=True
        ),
        sa.Column(
            'openai_message', sa.VARCHAR(),
            autoincrement=False, nullable=True
        ),
        sa.Column(
            'openai_message_datetime', postgresql.TIMESTAMP(),
            autoincrement=False, nullable=True
        ),
        sa.Column(
            'openai_response_delay_ms', sa.INTEGER(),
            autoincrement=False, nullable=True
        ),
        sa.ForeignKeyConstraint(
            ['user_id'], ['users.telegram_id'],
            name='chat_messages_user_id_fkey'
        ),
        sa.PrimaryKeyConstraint('id', name='chat_messages_pkey')
    )
    op.create_index(
        'ix_chat_messages_user_id',
        'chat_messages', ['user_id'], unique=False
    )
    op.create_index(
        'ix_chat_messages_id',
        'chat_messages', ['id'], unique=False
    )
    # ### end Alembic commands ###
